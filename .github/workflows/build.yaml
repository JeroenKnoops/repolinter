name: Build
on: [push, pull_request]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        node-version: ['14', '12', '10']
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}
    name: Node ${{ matrix.node-version }} sample (${{ matrix.os }})
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache NPM
        id: cache-node-modules
        uses: actions/cache@v2
        env:
          cache-name: node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install NPM Dependencies
        run: npm ci

      - name: Setup Python for Github-Markup
        if: ${{ runner.os != 'Windows' }}
        uses: actions/setup-python@v2
        with:
          python-version: '2.x'

      - name: Install docutils for Github-Markup
        if: ${{ runner.os != 'Windows' }}
        run: |
          python -m pip install --upgrade pip
          pip install docutils

      - name: Setup Licensee, Linguist, and Github-Markup Dependencies (MacOS)
        if: ${{ runner.os == 'macOS' }}
        run: brew install cmake pkg-config icu4c libidn

      - name: Setup Licensee, Linguist, and Github-Markup Dependencies (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libicu-dev libcurl4-openssl-dev libldap2-dev libidn11-dev

      - name: Setup Ruby
        if: ${{ runner.os != 'Windows' }}
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Cache Ruby Gems
        if: ${{ runner.os != 'Windows' }}
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Ruby Dependencies
        if: ${{ runner.os != 'Windows' }}
        run: |
          gem install --no-document bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle binstubs --all

      - name: Run Test
        run: npm test
